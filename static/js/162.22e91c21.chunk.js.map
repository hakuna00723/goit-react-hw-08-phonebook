{"version":3,"file":"static/js/162.22e91c21.chunk.js","mappings":"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","sources":["components/ContactForm/ContactForm.styled.jsx","components/ContactForm/ContactForm.jsx","../node_modules/reselect/es/defaultMemoize.js","../node_modules/reselect/es/index.js","redux/contacts/selectors.js","redux/filter/selectors.js","components/ContactList/ContactList.styled.jsx","components/ContactListItem/ContactListItem.styled.jsx","components/ContactListItem/ContactListItem.jsx","components/ContactList/ContactList.jsx","components/Filter/Filter.styled.jsx","components/Filter/Filter.jsx","components/ContactsBar/ContactsBar.styled.jsx","components/ContactsBar/ContactsBar.jsx","pages/Contacts.js"],"sourcesContent":["import { Form, Field, Formik } from 'formik';\nimport styled from 'styled-components';\n\nexport const FormikWrapper = styled(Formik)``;\n\nexport const FormBox = styled(Form)`\n  display: flex;\n  flex-direction: column;\n  padding: 20px;\n  align-items: center;\n  gap: 10px;\n  font-size: 20px;\n  margin-bottom: 50px;\n`;\n\nexport const InputName = styled(Field)`\n  display: block;\n  width: 600px;\n  height: 40px;\n  margin-bottom: 20px;\n  padding-left: 10px;\n  font-size: 20px;\n  border-radius: 10px;\n`;\n\nexport const InputTel = styled(InputName)``;\n\nexport const Button = styled.button`\n  background-color: aquamarine;\n  display: flex;\n  width: 200px;\n  margin-top: 70px;\n  min-height: 70px;\n  font-size: 25px;\n  font-weight: 700;\n  justify-content: center;\n  align-items: center;\n  cursor: pointer;\n  border: none;\n  border-radius: 40px;\n  box-shadow: 0 9px #999;\n\n  &:hover {\n    background-color: rgb(0, 255, 170);\n    color: #ffffff;\n  }\n\n  &:active {\n    box-shadow: 0 5px #666;\n    transform: translateY(4px);\n  }\n`;\n\nexport const Message = styled.p``;\n","import { ErrorMessage } from 'formik';\nimport { object, string } from 'yup';\nimport PropTypes from 'prop-types';\nimport {\n  FormBox,\n  InputName,\n  InputTel,\n  Button,\n  FormikWrapper,\n  Message,\n} from './ContactForm.styled';\n\nconst initialValues = {\n  name: '',\n  number: '',\n};\n\nconst userSchema = object({\n  name: string()\n    .matches(\n      /^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$/,\n      \"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n    )\n    .required('⚠️Please enter name.'),\n  number: string()\n    .matches(\n      /\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}/,\n      'Phone number must be digits and can contain spaces, dashes, parentheses and can start with +'\n    )\n    .required('⚠️Please enter number.'),\n});\n\nconst FormContact = ({ onSubmit }) => {\n  function handleSubmit({ name, number }, { resetForm }) {\n    onSubmit(name, number);\n    resetForm();\n  }\n\n  return (\n    <FormikWrapper\n      initialValues={initialValues}\n      onSubmit={handleSubmit}\n      validationSchema={userSchema}\n    >\n      <FormBox autoComplete=\"off\">\n        <label>\n          <span>Name</span>\n          <InputName placeholder=\"Enter contact name\" type=\"text\" name=\"name\" />\n          <ErrorMessage component={Message} name=\"name\" />\n        </label>\n        <label>\n          <span>Phone</span>\n          <InputTel\n            placeholder=\"Enter contact phone\"\n            type=\"tel\"\n            name=\"number\"\n          />\n          <ErrorMessage component={Message} name=\"number\" />\n        </label>\n        <Button type=\"submit\">Add contact</Button>\n      </FormBox>\n    </FormikWrapper>\n  );\n};\n\nFormContact.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};\n\nexport default FormContact;\n","// Cache implementation based on Erik Rasmussen's `lru-memoize`:\n// https://github.com/erikras/lru-memoize\nvar NOT_FOUND = 'NOT_FOUND';\n\nfunction createSingletonCache(equals) {\n  var entry;\n  return {\n    get: function get(key) {\n      if (entry && equals(entry.key, key)) {\n        return entry.value;\n      }\n\n      return NOT_FOUND;\n    },\n    put: function put(key, value) {\n      entry = {\n        key: key,\n        value: value\n      };\n    },\n    getEntries: function getEntries() {\n      return entry ? [entry] : [];\n    },\n    clear: function clear() {\n      entry = undefined;\n    }\n  };\n}\n\nfunction createLruCache(maxSize, equals) {\n  var entries = [];\n\n  function get(key) {\n    var cacheIndex = entries.findIndex(function (entry) {\n      return equals(key, entry.key);\n    }); // We found a cached entry\n\n    if (cacheIndex > -1) {\n      var entry = entries[cacheIndex]; // Cached entry not at top of cache, move it to the top\n\n      if (cacheIndex > 0) {\n        entries.splice(cacheIndex, 1);\n        entries.unshift(entry);\n      }\n\n      return entry.value;\n    } // No entry found in cache, return sentinel\n\n\n    return NOT_FOUND;\n  }\n\n  function put(key, value) {\n    if (get(key) === NOT_FOUND) {\n      // TODO Is unshift slow?\n      entries.unshift({\n        key: key,\n        value: value\n      });\n\n      if (entries.length > maxSize) {\n        entries.pop();\n      }\n    }\n  }\n\n  function getEntries() {\n    return entries;\n  }\n\n  function clear() {\n    entries = [];\n  }\n\n  return {\n    get: get,\n    put: put,\n    getEntries: getEntries,\n    clear: clear\n  };\n}\n\nexport var defaultEqualityCheck = function defaultEqualityCheck(a, b) {\n  return a === b;\n};\nexport function createCacheKeyComparator(equalityCheck) {\n  return function areArgumentsShallowlyEqual(prev, next) {\n    if (prev === null || next === null || prev.length !== next.length) {\n      return false;\n    } // Do this in a for loop (and not a `forEach` or an `every`) so we can determine equality as fast as possible.\n\n\n    var length = prev.length;\n\n    for (var i = 0; i < length; i++) {\n      if (!equalityCheck(prev[i], next[i])) {\n        return false;\n      }\n    }\n\n    return true;\n  };\n}\n// defaultMemoize now supports a configurable cache size with LRU behavior,\n// and optional comparison of the result value with existing values\nexport function defaultMemoize(func, equalityCheckOrOptions) {\n  var providedOptions = typeof equalityCheckOrOptions === 'object' ? equalityCheckOrOptions : {\n    equalityCheck: equalityCheckOrOptions\n  };\n  var _providedOptions$equa = providedOptions.equalityCheck,\n      equalityCheck = _providedOptions$equa === void 0 ? defaultEqualityCheck : _providedOptions$equa,\n      _providedOptions$maxS = providedOptions.maxSize,\n      maxSize = _providedOptions$maxS === void 0 ? 1 : _providedOptions$maxS,\n      resultEqualityCheck = providedOptions.resultEqualityCheck;\n  var comparator = createCacheKeyComparator(equalityCheck);\n  var cache = maxSize === 1 ? createSingletonCache(comparator) : createLruCache(maxSize, comparator); // we reference arguments instead of spreading them for performance reasons\n\n  function memoized() {\n    var value = cache.get(arguments);\n\n    if (value === NOT_FOUND) {\n      // @ts-ignore\n      value = func.apply(null, arguments);\n\n      if (resultEqualityCheck) {\n        var entries = cache.getEntries();\n        var matchingEntry = entries.find(function (entry) {\n          return resultEqualityCheck(entry.value, value);\n        });\n\n        if (matchingEntry) {\n          value = matchingEntry.value;\n        }\n      }\n\n      cache.put(arguments, value);\n    }\n\n    return value;\n  }\n\n  memoized.clearCache = function () {\n    return cache.clear();\n  };\n\n  return memoized;\n}","import { defaultMemoize, defaultEqualityCheck } from './defaultMemoize';\nexport { defaultMemoize, defaultEqualityCheck };\n\nfunction getDependencies(funcs) {\n  var dependencies = Array.isArray(funcs[0]) ? funcs[0] : funcs;\n\n  if (!dependencies.every(function (dep) {\n    return typeof dep === 'function';\n  })) {\n    var dependencyTypes = dependencies.map(function (dep) {\n      return typeof dep === 'function' ? \"function \" + (dep.name || 'unnamed') + \"()\" : typeof dep;\n    }).join(', ');\n    throw new Error(\"createSelector expects all input-selectors to be functions, but received the following types: [\" + dependencyTypes + \"]\");\n  }\n\n  return dependencies;\n}\n\nexport function createSelectorCreator(memoize) {\n  for (var _len = arguments.length, memoizeOptionsFromArgs = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    memoizeOptionsFromArgs[_key - 1] = arguments[_key];\n  }\n\n  var createSelector = function createSelector() {\n    for (var _len2 = arguments.length, funcs = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      funcs[_key2] = arguments[_key2];\n    }\n\n    var _recomputations = 0;\n\n    var _lastResult; // Due to the intricacies of rest params, we can't do an optional arg after `...funcs`.\n    // So, start by declaring the default value here.\n    // (And yes, the words 'memoize' and 'options' appear too many times in this next sequence.)\n\n\n    var directlyPassedOptions = {\n      memoizeOptions: undefined\n    }; // Normally, the result func or \"output selector\" is the last arg\n\n    var resultFunc = funcs.pop(); // If the result func is actually an _object_, assume it's our options object\n\n    if (typeof resultFunc === 'object') {\n      directlyPassedOptions = resultFunc; // and pop the real result func off\n\n      resultFunc = funcs.pop();\n    }\n\n    if (typeof resultFunc !== 'function') {\n      throw new Error(\"createSelector expects an output function after the inputs, but received: [\" + typeof resultFunc + \"]\");\n    } // Determine which set of options we're using. Prefer options passed directly,\n    // but fall back to options given to createSelectorCreator.\n\n\n    var _directlyPassedOption = directlyPassedOptions,\n        _directlyPassedOption2 = _directlyPassedOption.memoizeOptions,\n        memoizeOptions = _directlyPassedOption2 === void 0 ? memoizeOptionsFromArgs : _directlyPassedOption2; // Simplifying assumption: it's unlikely that the first options arg of the provided memoizer\n    // is an array. In most libs I've looked at, it's an equality function or options object.\n    // Based on that, if `memoizeOptions` _is_ an array, we assume it's a full\n    // user-provided array of options. Otherwise, it must be just the _first_ arg, and so\n    // we wrap it in an array so we can apply it.\n\n    var finalMemoizeOptions = Array.isArray(memoizeOptions) ? memoizeOptions : [memoizeOptions];\n    var dependencies = getDependencies(funcs);\n    var memoizedResultFunc = memoize.apply(void 0, [function recomputationWrapper() {\n      _recomputations++; // apply arguments instead of spreading for performance.\n\n      return resultFunc.apply(null, arguments);\n    }].concat(finalMemoizeOptions)); // If a selector is called with the exact same arguments we don't need to traverse our dependencies again.\n\n    var selector = memoize(function dependenciesChecker() {\n      var params = [];\n      var length = dependencies.length;\n\n      for (var i = 0; i < length; i++) {\n        // apply arguments instead of spreading and mutate a local list of params for performance.\n        // @ts-ignore\n        params.push(dependencies[i].apply(null, arguments));\n      } // apply arguments instead of spreading for performance.\n\n\n      _lastResult = memoizedResultFunc.apply(null, params);\n      return _lastResult;\n    });\n    Object.assign(selector, {\n      resultFunc: resultFunc,\n      memoizedResultFunc: memoizedResultFunc,\n      dependencies: dependencies,\n      lastResult: function lastResult() {\n        return _lastResult;\n      },\n      recomputations: function recomputations() {\n        return _recomputations;\n      },\n      resetRecomputations: function resetRecomputations() {\n        return _recomputations = 0;\n      }\n    });\n    return selector;\n  }; // @ts-ignore\n\n\n  return createSelector;\n}\nexport var createSelector = /* #__PURE__ */createSelectorCreator(defaultMemoize);\n// Manual definition of state and output arguments\nexport var createStructuredSelector = function createStructuredSelector(selectors, selectorCreator) {\n  if (selectorCreator === void 0) {\n    selectorCreator = createSelector;\n  }\n\n  if (typeof selectors !== 'object') {\n    throw new Error('createStructuredSelector expects first argument to be an object ' + (\"where each property is a selector, instead received a \" + typeof selectors));\n  }\n\n  var objectKeys = Object.keys(selectors);\n  var resultSelector = selectorCreator( // @ts-ignore\n  objectKeys.map(function (key) {\n    return selectors[key];\n  }), function () {\n    for (var _len3 = arguments.length, values = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n      values[_key3] = arguments[_key3];\n    }\n\n    return values.reduce(function (composition, value, index) {\n      composition[objectKeys[index]] = value;\n      return composition;\n    }, {});\n  });\n  return resultSelector;\n};","export const selectContacts = state => state.contacts.items;\n\nexport const selectIsLoading = state => state.contacts.isLoading;\n\nexport const selectError = state => state.contacts.error;\n","import { createSelector } from '@reduxjs/toolkit';\nimport { selectContacts } from 'redux/contacts/selectors';\n\nexport const selectFilter = state => state.filter;\n\nexport const filterListContacts = createSelector(\n  [selectContacts, selectFilter],\n  (contacts, filter) => {\n    return contacts.filter(({ name }) =>\n      name.toLowerCase().includes(filter.toLowerCase())\n    );\n  }\n);\n","import styled from 'styled-components';\n\nexport const List = styled.ul`\n  list-style: none;\n  display: flex;\n  flex-wrap: wrap;\n  padding: 0;\n  gap: 15px;\n  margin-left: auto;\n  margin-right: auto;\n`;\n\nexport const Item = styled.li`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`;\n","import styled from 'styled-components';\n\nexport const ListElem = styled.li`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`;\n\nexport const Text = styled.p`\n  font-size: 20px;\n`;\n\nexport const Button = styled.button`\n  background-color: pink;\n  display: flex;\n  width: 80px;\n  min-height: 80px;\n  font-size: 20px;\n  font-weight: 700;\n  justify-content: center;\n  align-items: center;\n  cursor: pointer;\n  border: none;\n  border-radius: 50%;\n  box-shadow: 0 9px #999;\n\n  &:hover {\n    background-color: #f7667e;\n    color: #ffffff;\n  }\n\n  &:active {\n    box-shadow: 0 5px #666;\n    transform: translateY(4px);\n  }\n`;\n","import PropTypes from 'prop-types';\nimport { useDispatch } from 'react-redux';\nimport { deleteContact } from '../../redux/contacts/operations';\nimport { ListElem, Text, Button } from './ContactListItem.styled';\n\nconst ElementContact = ({ contactName, contactNumber, contactId }) => {\n  const dispatch = useDispatch();\n  const handleDelete = eId => dispatch(deleteContact(eId));\n  return (\n    <ListElem>\n      <Text>{contactName}</Text>\n      <Text>{contactNumber}</Text>\n\n      <Button type=\"button\" onClick={() => handleDelete(contactId)}>\n        Delete\n      </Button>\n    </ListElem>\n  );\n};\n\nElementContact.propTypes = {\n  contactName: PropTypes.string.isRequired,\n  contactNumber: PropTypes.string.isRequired,\n  contactId: PropTypes.string.isRequired,\n};\n\nexport default ElementContact;\n","import { useSelector } from 'react-redux';\nimport { selectFilter } from '../../redux/filter/selectors';\nimport { selectContacts } from '../../redux/contacts/selectors';\nimport { List } from './ContactList.styled';\nimport ElementContact from '../ContactListItem';\n\nconst ListContact = () => {\n  const contacts = useSelector(selectContacts);\n  const filter = useSelector(selectFilter);\n\n  const makeFiltredContacts = () => {\n    return contacts.filter(({ name }) => {\n      return name.toLowerCase().includes(filter.toLowerCase());\n    });\n  };\n\n  const makeList = array => {\n    return array.map(({ id, name, number }) => {\n      return (\n        <ElementContact\n          key={id}\n          contactName={name}\n          contactNumber={number}\n          contactId={id}\n        />\n      );\n    });\n  };\n  return <List>{makeList(makeFiltredContacts())}</List>;\n};\n\nexport default ListContact;\n","import styled from 'styled-components';\n\nexport const Label = styled.label`\n  font-size: 20px;\n`;\n\nexport const Input = styled.input`\n  display: block;\n  width: 600px;\n  height: 30px;\n  padding-left: 10px;\n  font-size: 20px;\n  border-radius: 10px;\n`;\n","import { useDispatch } from 'react-redux';\nimport { filterContacts } from '../../redux/filter/slice';\nimport { Label, Input } from './Filter.styled';\n\nconst SearchFilter = () => {\n  const dispatch = useDispatch();\n\n  const handleFilter = ({ target: { value } }) => {\n    dispatch(filterContacts(value));\n  };\n  return (\n    <Label>\n      Find contacts by name\n      <Input type=\"text\" name=\"filter\" onChange={handleFilter} />\n    </Label>\n  );\n};\n\nexport default SearchFilter;\n","import styled from 'styled-components';\n\nexport const Wrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  width: 620px;\n  margin: 100px auto;\n`;\n\nexport const Title = styled.h1`\n  font-size: 50px;\n`;\n\nexport const Text = styled.h2`\n  font-size: 30px;\n`;\n\nexport const Message = styled.p`\n  margin-left: auto;\n  margin-right: auto;\n  padding: 10px;\n  font-size: 30px;\n`;\n","import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addContact, fetchContacts } from 'redux/contacts/operations';\nimport FormContact from 'components/ContactForm';\nimport ListContact from 'components/ContactList';\nimport SearchFilter from 'components/Filter';\nimport { Message, Title, Wrapper, Text } from './ContactsBar.styled';\nimport {\n  selectContacts,\n  selectIsLoading,\n  selectError,\n} from '../../redux/contacts/selectors';\n\nconst ContactsBar = () => {\n  const dispatch = useDispatch();\n  const allContacts = useSelector(selectContacts);\n  const isLoading = useSelector(selectIsLoading);\n  const error = useSelector(selectError);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  const notifiesAlert = (numberContact, nameContact) => {\n    return alert(\n      `${numberContact} is already in contacts under the name ${nameContact}.`\n    );\n  };\n\n  const checkСontact = newNumber => {\n    return allContacts.some(contact => contact.number === newNumber);\n  };\n\n  const onSubmit = (name, number) => {\n    if (checkСontact(number)) {\n      return notifiesAlert(number, name);\n    }\n\n    dispatch(addContact({ name, number }));\n  };\n\n  return (\n    <Wrapper isHeight={allContacts.length > 0}>\n      <Title>Phonebook</Title>\n      <FormContact onSubmit={onSubmit} />\n\n      <Text>Contacts</Text>\n\n      {!error && isLoading}\n\n      {!error && !isLoading && allContacts.length === 0 ? (\n        <Message>Ooops... There are no contacts🙁</Message>\n      ) : (\n        <>\n          <SearchFilter />\n          <ListContact />\n        </>\n      )}\n    </Wrapper>\n  );\n};\n\nexport default ContactsBar;\n","import { Helmet } from 'react-helmet';\nimport ContactsBar from 'components/ContactsBar';\nimport { useAuth } from 'hooks';\n\nconst Contacts = () => {\n  const { isLoading } = useAuth();\n\n  return (\n    <>\n      <Helmet>\n        <title>Contacts</title>\n      </Helmet>\n\n      {isLoading}\n      <ContactsBar />\n    </>\n  );\n};\n\nexport default Contacts;\n"],"names":["FormikWrapper","styled","Formik","FormBox","Form","InputName","Field","InputTel","Button","Message","initialValues","name","number","userSchema","object","string","matches","required","onSubmit","resetForm","validationSchema","autoComplete","placeholder","type","component","NOT_FOUND","defaultEqualityCheck","a","b","defaultMemoize","func","equalityCheckOrOptions","providedOptions","equalityCheck","_providedOptions$equa","_providedOptions$maxS","maxSize","resultEqualityCheck","comparator","prev","next","length","i","createCacheKeyComparator","cache","equals","entry","get","key","value","put","getEntries","clear","undefined","createSingletonCache","entries","cacheIndex","findIndex","splice","unshift","pop","createLruCache","memoized","arguments","apply","matchingEntry","find","clearCache","getDependencies","funcs","dependencies","Array","isArray","every","dep","dependencyTypes","map","join","Error","createSelectorCreator","memoize","_len","memoizeOptionsFromArgs","_key","createSelector","_len2","_key2","_lastResult","_recomputations","directlyPassedOptions","memoizeOptions","resultFunc","_directlyPassedOption","_directlyPassedOption2","finalMemoizeOptions","memoizedResultFunc","concat","selector","params","push","Object","assign","lastResult","recomputations","resetRecomputations","selectContacts","state","contacts","items","selectIsLoading","isLoading","selectError","error","selectFilter","filter","List","toLowerCase","includes","ListElem","Text","contactName","contactNumber","contactId","dispatch","useDispatch","onClick","eId","deleteContact","array","useSelector","id","Label","Input","onChange","target","filterContacts","Wrapper","Title","allContacts","useEffect","fetchContacts","isHeight","newNumber","some","contact","nameContact","alert","addContact","useAuth","Helmet"],"sourceRoot":""}